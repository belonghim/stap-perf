    kind: DaemonSet
    apiVersion: apps/v1
    metadata:
      name: stap-master
      namespace: openshift-ovn-kubernetes
      annotations:
        kubernetes.io/description: |
          This daemonset launches the stap on master networking components.
        release.openshift.io/version: "{{.ReleaseVersion}}"
    spec:
      selector:
        matchLabels:
          app: stap-master
      strategy:
        type: RollingUpdate
        rollingUpdate:
          # by default, Deployments spin up the new pod before terminating the old one
          # but we don't want that - because ovsdb holds the lock.
          maxSurge: 0
          maxUnavailable: 1
      template:
        metadata:
          labels:
            app: stap-master
            component: network
            type: infra
            openshift.io/component: network
            kubernetes.io/os: "linux"
        spec:
          serviceAccountName: ovn-kubernetes-controller
          hostNetwork: true
          hostPID: true
          priorityClassName: "system-cluster-critical"
          containers:
          # ovnkube master: convert kubernetes objects in to nbdb logical network components
          - name: stap-master
            image: quay.io/mcambria/rhcos-dbg
            command:
            - /bin/bash
            - -c
            - |
              set -xe
              if [[ -f "/env/_master" ]]; then
                set -o allexport
                source "/env/_master"
                set +o allexport
              fi
     
              echo "I$(date "+%m%d %H:%M:%S.%N") - stap-master - start stap-master ${K8S_NODE}"
              tail -F /dev/null
            lifecycle:
              preStop:
                exec:
                  command: ["/bin/bash", "-c", "echo stap done"]
            securityContext:
              privileged: true
            volumeMounts:
            - mountPath: /tmp
              name: host-tmp
            - mountPath: /sys
              name: host-sys
            resources:
              requests:
                cpu: 10m
                memory: 300Mi
            env:
            - name: OVN_KUBE_LOG_LEVEL
              value: "4"
            - name: K8S_NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            terminationMessagePolicy: FallbackToLogsOnError
     
          nodeSelector:
            node-role.kubernetes.io/master: ""
            beta.kubernetes.io/os: "linux"
          volumes:
          - name: host-tmp
            hostPath:
              path: /tmp
          - name: host-sys
            hostPath:
              path: /sys
          tolerations:
          - key: "node-role.kubernetes.io/master"
            operator: "Exists"
          - key: "node.kubernetes.io/not-ready"
            operator: "Exists"
          - key: "node.kubernetes.io/unreachable"
            operator: "Exists"
          - key: "node.kubernetes.io/network-unavailable"
            operator: "Exists"
